#include <stdio.h>
#include <stdlib.h>
#include <string.h>

struct species {
    char **supplies;
    int supplyCount;
} inventory[10];

int speciesCount = 0;

void addspecies() {
    if (speciesCount >= 10) {
        printf("Inventory full.\n");
        return;
    }
    int count;
    printf("Enter number of supplies for species %d: ", speciesCount + 1);
    scanf("%d", &count);
    inventory[speciesCount].supplies = (char **)malloc(count * sizeof(char *));
    inventory[speciesCount].supplyCount = count;
    for (int i = 0; i < count; i++) {
        char temp[100];
        printf("Enter supply %d: ", i + 1);
        scanf("%s", temp);
        inventory[speciesCount].supplies[i] = (char *)malloc((strlen(temp) + 1) * sizeof(char));
        strcpy(inventory[speciesCount].supplies[i], temp);
    }
    speciesCount++;
}

void updatesupply() {
    int sIndex, supIndex;
    printf("Enter species index (1 to %d): ", speciesCount);
    scanf("%d", &sIndex);
    sIndex--;
    if (sIndex < 0 || sIndex >= speciesCount) {
        printf("Invalid species index.\n");
        return;
    }
    printf("Enter supply index (1 to %d): ", inventory[sIndex].supplyCount);
    scanf("%d", &supIndex);
    supIndex--;
    if (supIndex < 0 || supIndex >= inventory[sIndex].supplyCount) {
        printf("Invalid supply index.\n");
        return;
    }
    char temp[100];
    printf("Enter new supply name: ");
    scanf("%s", temp);
    free(inventory[sIndex].supplies[supIndex]);
    inventory[sIndex].supplies[supIndex] = (char *)malloc((strlen(temp) + 1) * sizeof(char));
    strcpy(inventory[sIndex].supplies[supIndex], temp);
}

void removespecies() {
    int sIndex;
    printf("Enter species index (1 to %d): ", speciesCount);
    scanf("%d", &sIndex);
    sIndex--;
    if (sIndex < 0 || sIndex >= speciesCount) {
        printf("Invalid species index.\n");
        return;
    }
    for (int i = 0; i < inventory[sIndex].supplyCount; i++) {
        free(inventory[sIndex].supplies[i]);
    }
    free(inventory[sIndex].supplies);
    for (int i = sIndex; i < speciesCount - 1; i++) {
        inventory[i] = inventory[i + 1];
    }
    speciesCount--;
}

void displayinventory() {
    for (int i = 0; i < speciesCount; i++) {
        printf("Species %d supplies:\n", i + 1);
        for (int j = 0; j < inventory[i].supplyCount; j++) {
            printf("- %s\n", inventory[i].supplies[j]);
        }
        printf("\n");
    }
}

int main() {
    int choice = 0;
    while (choice != 5) {
        printf("\n1. Add Species\n2. Update Supply\n3. Remove Species\n4. Display Inventory\n5. Exit\n");
        printf("Enter choice: ");
        scanf("%d", &choice);
        if (choice == 1) {
            addspecies();
        } else if (choice == 2) {
            updatesupply();
        } else if (choice == 3) {
            removespecies();
        } else if (choice == 4) {
            displayinventory();
        } else if (choice != 5) {
            printf("Invalid choice.\n");
        }
    }

    for (int i = 0; i < speciesCount; i++) {
        for (int j = 0; j < inventory[i].supplyCount; j++) {
            free(inventory[i].supplies[j]);
        }
        free(inventory[i].supplies);
    }
    return 0;
}
